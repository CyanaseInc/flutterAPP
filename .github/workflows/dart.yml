name: Cyanase-iOS-ipa-build

on:
  workflow_dispatch:

jobs:
  build-ios:
    name: 🎉 iOS Build
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'  # Latest stable version as of June 2025
          channel: 'stable'
          architecture: x64

      # 🧹 Clean build artifacts
      - name: Clean build
        run: flutter clean

      # 🛠 Clear pub cache
      - name: Clear pub cache
        run: rm -rf ~/Library/Caches/com.dartlang.pub

      # 🛠 Repair Flutter pub cache
      - name: Repair Flutter cache
        run: flutter pub cache repair

      # 📦 Get project dependencies
      - name: Install dependencies
        run: flutter pub get

      # 🔍 Debug pubspec files
      - name: List pubspec files
        run: |
          echo "pubspec.yaml contents:"
          cat pubspec.yaml
          echo "pubspec.lock contents:"
          cat pubspec.lock || echo "No pubspec.lock file found"

      # 🔄 Update and reinstall CocoaPods
      - name: Update and Install CocoaPods
        run: |
          pod repo update
          pod deintegrate
          pod install
        working-directory: ios

      # ✅ FIX: Remove bridging header reference
      - name: Remove bridging header reference
        run: |
          sed -i '' '/SWIFT_OBJC_BRIDGING_HEADER/d' ios/Runner.xcodeproj/project.pbxproj || true
          if [ -f ios/Runner/Runner-Bridging-Header.h ]; then
            rm ios/Runner/Runner-Bridging-Header.h
          fi

      # ✅ FIX: Disable BUILD_LIBRARY_FOR_DISTRIBUTION
      - name: Patch Xcode project to avoid Swift bridging header issue
        run: |
          sed -i '' 's/BUILD_LIBRARY_FOR_DISTRIBUTION = YES;/BUILD_LIBRARY_FOR_DISTRIBUTION = NO;/g' ios/Runner.xcodeproj/project.pbxproj || true

      # 🚀 Build the iOS release (without code signing)
      - name: Build iOS
        run: flutter build ios --release --no-codesign

      # 📁 Prepare .ipa structure
      - name: Create Payload directory
        run: mkdir Payload
        working-directory: build/ios/iphoneos

      - name: Move Runner.app to Payload
        run: mv Runner.app Payload
        working-directory: build/ios/iphoneos

      # 📦 Create .ipa zip file
      - name: Zip IPA
        run: zip -qq -r -9 FlutterIpaExport.ipa Payload
        working-directory: build/ios/iphoneos

      # ☁️ Upload the .ipa to GitHub release
      - name: Upload IPA to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/ios/iphoneos/FlutterIpaExport.ipa
          tag: v1.0
          overwrite: true
          body: "This is first release"
