name: cyanase_ipa

on:
  workflow_dispatch:

jobs:
  build-ios:
    name: 🚀 Build iOS Test IPA (No Signing)
    runs-on: macos-14

    steps:
      - name: 🛎️ Checkout Code
        uses: actions/checkout@v4

      - name: 🔧 Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true

      - name: 💙 Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.2'
          channel: stable
          architecture: x64

      - name: 📦 Cache Flutter and Pods
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            ios/Pods
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}

      - name: 🔎 Check for Merge Conflicts in project.pbxproj
        run: |
          if grep -E "^<<<<<<<|^=======|^>>>>>>>" ios/Runner.xcodeproj/project.pbxproj; then
            echo "❌ Merge conflicts detected in project.pbxproj"
            exit 1
          fi

      - name: ✅ Validate Xcode Project
        run: xcodebuild -project ios/Runner.xcodeproj -list

      - name: 🧹 Clean and Get Packages
        run: |
          flutter clean
          flutter pub get

      - name: 🍎 Patch Podfile to ensure BUILD_LIBRARY_FOR_DISTRIBUTION = NO
        run: |
          # Backup Podfile before patching
          cp ios/Podfile ios/Podfile.bak

          # Check if Podfile contains post_install block
          if grep -q "post_install do |installer|" ios/Podfile; then
            echo "Patching existing post_install block in Podfile"

            # Insert BUILD_LIBRARY_FOR_DISTRIBUTION=NO inside post_install targets loop if missing
            awk '
              BEGIN {inserted=0}
              /post_install do \|installer\|/ {in_post=1}
              in_post && /installer.pods_project.targets.each do \|target\|/ {in_targets=1}
              in_targets && /end/ && !inserted {
                print "\t\ttarget.build_configurations.each do |config|"
                print "\t\t\tconfig.build_settings[\"BUILD_LIBRARY_FOR_DISTRIBUTION\"] = \"NO\""
                print "\t\tend"
                inserted=1
              }
              {print}
            ' ios/Podfile > ios/Podfile.patched && mv ios/Podfile.patched ios/Podfile

          else
            echo "No post_install block found, adding a new one with BUILD_LIBRARY_FOR_DISTRIBUTION=NO"
            cat <<EOF >> ios/Podfile

post_install do |installer|
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      config.build_settings["BUILD_LIBRARY_FOR_DISTRIBUTION"] = "NO"
    end
  end
end
EOF
          fi

      - name: 🍎 Install CocoaPods
        run: |
          cd ios
          pod install --repo-update
          cd ..

      # Remove manual bridging header hack, as it causes conflicts with module interfaces

      - name: 🚫 Disable User Script Sandboxing
        run: |
          cd ios
          awk '/buildSettings = {/ {print; print "\t\t\t\tENABLE_USER_SCRIPT_SANDBOXING = NO;"; next}1' Runner.xcodeproj/project.pbxproj > temp.pbxproj
          mv temp.pbxproj Runner.xcodeproj/project.pbxproj
          cd ..

      - name: ❌ Disable Code Signing & Bitcode
        run: |
          cd ios
          awk '/buildSettings = {/ {
            print;
            print "\t\t\t\tCODE_SIGN_STYLE = Manual;";
            print "\t\t\t\tCODE_SIGN_IDENTITY = \"\";";
            print "\t\t\t\tDEVELOPMENT_TEAM = \"\";";
            print "\t\t\t\tPROVISIONING_PROFILE_SPECIFIER = \"\";";
            print "\t\t\t\tENABLE_BITCODE = NO;";
            next
          }1' Runner.xcodeproj/project.pbxproj > temp.pbxproj
          mv temp.pbxproj Runner.xcodeproj/project.pbxproj
          cd ..

      - name: 🔓 Set Permissions
        run: chmod -R u+rw ios

      - name: 🛠 Set Writable Derived Data Path
        run: |
          mkdir -p ${{ github.workspace }}/build/ios_derived
          echo "XCODE_DERIVED_DATA_PATH=${{ github.workspace }}/build/ios_derived" >> $GITHUB_ENV

      - name: 📦 Build Unsigned IPA
        run: |
          set -euo pipefail
          flutter build ipa --release --no-codesign --verbose

      - name: 🧪 List Build Folder (Debugging)
        run: |
          echo "🔍 Listing all contents of build/ios:"
          find build/ios

      - name: 📄 Rename IPA for Release Upload
        run: |
          mkdir -p release-artifacts
          IPA_PATH=$(find build/ios -type f -name "*.ipa" | head -n 1)
          if [ -z "$IPA_PATH" ]; then
            echo "❌ No IPA found. Here's what was built:"
            find build
            exit 1
          fi
          echo "✅ IPA found at $IPA_PATH"
          cp "$IPA_PATH" release-artifacts/cyanase_ios_unsigned.ipa

      - name: 🪄 Upload to GitHub Release
        uses: softprops/action-gh-release@v1
        if: success()
        with:
          name: "Cyanase iOS Release"
          tag_name: "ios-${{ github.run_number }}"
          files: release-artifacts/cyanase_ios_unsigned.ipa
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 📤 Upload IPA Artifact (optional)
        uses: actions/upload-artifact@v4
        with:
          name: cyanase_ios_ipa_unsigned
          path: release-artifacts/cyanase_ios_unsigned.ipa
