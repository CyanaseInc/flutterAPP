# Uncomment this line to define a global platform for your project
platform :ios, '12.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

ENV['FLUTTER_ROOT'] ||= File.expand_path('../../flutter', __FILE__)

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  flutter_install_all_ios_pods(File.dirname(File.realpath(__FILE__)))

  target 'RunnerTests' do
    inherit! :search_paths
  end

  post_install do |installer|
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'NO'
      end
    end
  end
end

post_install do |installer|
  # First, ensure all xcconfig files have consistent ENABLE_BITCODE settings
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      xcconfig_path = config.base_configuration_reference.real_path
      xcconfig = File.read(xcconfig_path)
      xcconfig_mod = xcconfig.gsub(/ENABLE_BITCODE\s*=\s*.*/, 'ENABLE_BITCODE = NO')
      File.write(xcconfig_path, xcconfig_mod)
    end
  end

  # Then apply all other settings
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    target.build_configurations.each do |config|
      # Ensure consistent settings across all targets
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.0'
      config.build_settings['ENABLE_BITCODE'] = 'NO'
      
      # Fix for Xcode 15 and arm64 architecture
      config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
      
      # Fix for sandbox permission issues
      config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
      config.build_settings['CODE_SIGNING_REQUIRED'] = 'NO'
      config.build_settings['CODE_SIGNING_IDENTITY'] = ''
      config.build_settings['EXPANDED_CODE_SIGN_IDENTITY'] = ''
      config.build_settings['CODE_SIGN_ENTITLEMENTS'] = ''
      
      # Additional build settings for CI/CD
      config.build_settings['DEVELOPMENT_TEAM'] = ''
      config.build_settings['PROVISIONING_PROFILE_SPECIFIER'] = ''
      config.build_settings['DEAD_CODE_STRIPPING'] = 'YES'
      config.build_settings['ENABLE_STRICT_OBJC_MSGSEND'] = 'YES'
      config.build_settings['GCC_OPTIMIZATION_LEVEL'] = '0'
      config.build_settings['SWIFT_OPTIMIZATION_LEVEL'] = '-Onone'
      
      # Fix bridging header and precompiled header issues
      config.build_settings['SWIFT_OBJC_BRIDGING_HEADER'] = '${PODS_ROOT}/../Runner/Runner-Bridging-Header.h'
      config.build_settings['SWIFT_OBJC_INTERFACE_HEADER_NAME'] = ''
      config.build_settings['SWIFT_PRECOMPILE_BRIDGING_HEADER'] = 'NO'
      config.build_settings['SWIFT_USE_PARALLEL_WHOLE_MODULE_OPTIMIZATION'] = 'NO'
      config.build_settings['SWIFT_COMPILATION_MODE'] = 'singlefile'
      
      # Disable module interfaces and ensure bridging headers work
      config.build_settings['SWIFT_ENABLE_MODULE_INTERFACE'] = 'NO'
      config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'NO'
      config.build_settings['DEFINES_MODULE'] = 'NO'
      config.build_settings['SWIFT_INSTALL_OBJC_HEADER'] = 'NO'

      # Ensure proper framework search paths
      config.build_settings['FRAMEWORK_SEARCH_PATHS'] ||= ['$(inherited)']
      config.build_settings['FRAMEWORK_SEARCH_PATHS'] << '${PODS_ROOT}/../Flutter'
      config.build_settings['FRAMEWORK_SEARCH_PATHS'] << '${PODS_CONFIGURATION_BUILD_DIR}'
      
      # Ensure proper header search paths
      config.build_settings['HEADER_SEARCH_PATHS'] ||= ['$(inherited)']
      config.build_settings['HEADER_SEARCH_PATHS'] << '${PODS_ROOT}/Headers/Public'
      config.build_settings['HEADER_SEARCH_PATHS'] << '${PODS_ROOT}/Headers/Public/Flutter'
      config.build_settings['HEADER_SEARCH_PATHS'] << '${PODS_ROOT}/Headers/Private'
      config.build_settings['HEADER_SEARCH_PATHS'] << '${PODS_ROOT}/Headers/Private/Flutter'
    end
  end
end
